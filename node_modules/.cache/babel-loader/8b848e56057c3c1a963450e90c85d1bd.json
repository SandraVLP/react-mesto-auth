{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapetuhova/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport React, { useState } from \"react\";\nimport api from \"../utils/Api.js\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"./CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [cards, setCards] = useState([]);\n\n  function closeAllPopups() {\n    setisEditAvatarPopupOpen(false);\n    setisAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  function handleUpdateUser(data) {\n    api.setProfileData(data).then(profile => {\n      setCurrentUser(profile);\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data).then(profile => {\n      setCurrentUser(profile);\n      closeAllPopups();\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id ? c : null);\n      setCards(newCards);\n    });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.setNewCards(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    });\n  }\n\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards()]).then(_ref => {\n      let [cards] = _ref;\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }, []);\n  React.useEffect(() => {\n    Promise.all([api.getProfileData()]).then(_ref2 => {\n      let [profile] = _ref2;\n      setCurrentUser(profile);\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: () => setisEditAvatarPopupOpen(true),\n        onEditProfile: () => setIsEditProfilePopupOpen(true),\n        onAddPlace: () => setisAddPlacePopupOpen(true),\n        onCardClick: selectedCard => handleCardClick(selectedCard),\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: () => closeAllPopups(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0ZdagGqUwGzsGgdnVuRBJGFKK3Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","ImagePopup","React","useState","api","Card","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","closeAllPopups","handleCardClick","handleUpdateUser","data","setProfileData","then","profile","handleUpdateAvatar","setUserAvatar","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","setNewCards","useEffect","Promise","all","getInitialCards","catch","err","console","log","getProfileData"],"sources":["/Users/aleksandrapetuhova/dev/mesto-react/src/components/App.js"],"sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport React, { useState } from \"react\";\nimport api from \"../utils/Api.js\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"./CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  function closeAllPopups() {\n    setisEditAvatarPopupOpen(false);\n    setisAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  function handleUpdateUser(data) {\n    api.setProfileData(data).then((profile) => {\n      setCurrentUser(profile);\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data).then((profile) => {\n      setCurrentUser(profile);\n      closeAllPopups();\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n      setCards(newCards);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter((c) => (c._id !== card._id ? c : null));\n      setCards(newCards);\n    });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.setNewCards(data).then((newCard) =>{\n      setCards([newCard,...cards]);\n      closeAllPopups();\n    }\n    )\n  }\n\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards()])\n      .then(([cards]) => {\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    Promise.all([api.getProfileData()])\n      .then(([profile]) => {\n        setCurrentUser(profile);\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          onEditAvatar={() => setisEditAvatarPopupOpen(true)}\n          onEditProfile={() => setIsEditProfilePopupOpen(true)}\n          onAddPlace={() => setisAddPlacePopupOpen(true)}\n          onCardClick={(selectedCard) => handleCardClick(selectedCard)}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          cards={cards}\n        />\n\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />  \n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        {/* \n    <PopupWithForm \n    name='popup_sure' \n    title='Обновить Вы уверены?' \n    submitname='Да'\n    isOpen={}\n    /> */}\n        <ImagePopup card={selectedCard} onClose={() => closeAllPopups(true)} />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}