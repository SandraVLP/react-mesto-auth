{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrapetuhova/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport React, { useState } from \"react\";\nimport { Route, useNavigate, Navigate, Routes } from \"react-router-dom\";\nimport api from \"../utils/Api.js\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport * as auth from \"../auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  function closeAllPopups() {\n    setisEditAvatarPopupOpen(false);\n    setisAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  function handleUpdateUser(data) {\n    api.setProfileData(data).then(profile => {\n      setCurrentUser(profile);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }\n\n  function handleUpdateAvatar(data) {\n    api.setUserAvatar(data).then(profile => {\n      setCurrentUser(profile);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c => c._id !== card._id ? c : null);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api.setNewCards(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }\n\n  const handleLoginClick = () => {\n    navigate(\"/signin\");\n  };\n\n  const handleEnterClick = () => {\n    navigate(\"*\");\n  };\n\n  const handleTokenCheck = () => {\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\"); // проверяем токен пользователя\n\n      auth.checkToken(jwt).then(res => {\n        if (res) {\n          // если есть цель, добавляем её в стейт\n          console.log('token ok');\n          setLoggedIn(true);\n        }\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, []);\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards()]).then(_ref => {\n      let [cards] = _ref;\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }, []);\n  React.useEffect(() => {\n    Promise.all([api.getProfileData()]).then(_ref2 => {\n      let [profile] = _ref2;\n      setCurrentUser(profile);\n    }).catch(err => {\n      console.log(`Ошибка; ${err}`);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: loggedIn === true ? 'loggedIn === true' : 'loggedIn === false'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cards\",\n          element:\n          /*#__PURE__*/\n          // <ProtectedRoute hasAccess={true}>\n          _jsxDEV(Main, {\n            onEditAvatar: () => setisEditAvatarPopupOpen(true),\n            onEditProfile: () => setIsEditProfilePopupOpen(true),\n            onAddPlace: () => setisAddPlacePopupOpen(true),\n            onCardClick: selectedCard => handleCardClick(selectedCard),\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this) // </ProtectedRoute>\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegSuccess: () => handleLoginClick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLoginSuccess: () => handleEnterClick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: loggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: () => closeAllPopups(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RQE2uNpfwQc16l61P7u2xZxMZl0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","ImagePopup","React","useState","Route","useNavigate","Navigate","Routes","api","Card","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setisAddPlacePopupOpen","isEditAvatarPopupOpen","setisEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","navigate","closeAllPopups","handleCardClick","handleUpdateUser","data","setProfileData","then","profile","catch","err","console","log","handleUpdateAvatar","setUserAvatar","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","setNewCards","handleLoginClick","handleEnterClick","handleTokenCheck","localStorage","getItem","jwt","checkToken","res","useEffect","Promise","all","getInitialCards","getProfileData"],"sources":["/Users/aleksandrapetuhova/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport React, { useState } from \"react\";\nimport { Route, useNavigate, Navigate, Routes } from \"react-router-dom\";\nimport api from \"../utils/Api.js\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport * as auth from \"../auth.js\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setisAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setisEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  function closeAllPopups() {\n    setisEditAvatarPopupOpen(false);\n    setisAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  function handleUpdateUser(data) {\n    api\n      .setProfileData(data)\n      .then((profile) => {\n        setCurrentUser(profile);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    api\n      .setUserAvatar(data)\n      .then((profile) => {\n        setCurrentUser(profile);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => (c._id !== card._id ? c : null));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .setNewCards(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }\n\n  const handleLoginClick = () => {\n    navigate(\"/signin\");\n  };\n\n  const handleEnterClick = () => {\n    navigate(\"*\");\n  };\n\n  const handleTokenCheck = () => {\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\");\n      // проверяем токен пользователя\n      auth.checkToken(jwt).then((res) => {\n        if (res) {\n          // если есть цель, добавляем её в стейт\n          console.log('token ok');\n          setLoggedIn(true);\n        }\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  React.useEffect(() => {\n    Promise.all([api.getInitialCards()])\n      .then(([cards]) => {\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    Promise.all([api.getProfileData()])\n      .then(([profile]) => {\n        setCurrentUser(profile);\n      })\n      .catch((err) => {\n        console.log(`Ошибка; ${err}`);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <div>{loggedIn === true ? 'loggedIn === true' : 'loggedIn === false'}</div>\n        <Header />\n        <Routes>\n          <Route\n            path=\"/cards\"\n            element={\n              // <ProtectedRoute hasAccess={true}>\n                <Main \n                  onEditAvatar={() => setisEditAvatarPopupOpen(true)}\n                  onEditProfile={() => setIsEditProfilePopupOpen(true)}\n                  onAddPlace={() => setisAddPlacePopupOpen(true)}\n                  onCardClick={(selectedCard) => handleCardClick(selectedCard)}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cards={cards}\n              />\n              // </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/signup\"\n            element={<Register onRegSuccess={() => handleLoginClick()} />}\n          />\n          <Route\n            path=\"/signin\"\n            element={<Login onLoginSuccess={() => handleEnterClick()} />}\n          />\n          <Route\n            path=\"*\"\n            element={loggedIn ? <Navigate to=\"/cards\" /> : <Navigate to=\"/signin\" />}\n          ></Route>\n        </Routes>\n\n        <Footer />\n        <InfoTooltip />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        {/* \n    <PopupWithForm \n    name='popup_sure' \n    title='Обновить Вы уверены?' \n    submitname='Да'\n    isOpen={}\n    /> */}\n        <ImagePopup card={selectedCard} onClose={() => closeAllPopups(true)} />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,QAAqD,kBAArD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDlB,QAAQ,CAAC,KAAD,CAApE;EACA,MAAM,CAACmB,mBAAD,EAAsBC,sBAAtB,IAAgDpB,QAAQ,CAAC,KAAD,CAA9D;EACA,MAAM,CAACqB,qBAAD,EAAwBC,wBAAxB,IAAoDtB,QAAQ,CAAC,KAAD,CAAlE;EACA,MAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM+B,QAAQ,GAAG7B,WAAW,EAA5B;;EAEA,SAAS8B,cAAT,GAA0B;IACxBV,wBAAwB,CAAC,KAAD,CAAxB;IACAF,sBAAsB,CAAC,KAAD,CAAtB;IACAF,yBAAyB,CAAC,KAAD,CAAzB;IACAM,eAAe,CAAC,IAAD,CAAf;EACD;;EAED,SAASS,eAAT,CAAyBV,YAAzB,EAAuC;IACrCC,eAAe,CAACD,YAAD,CAAf;EACD;;EAED,SAASW,gBAAT,CAA0BC,IAA1B,EAAgC;IAC9B9B,GAAG,CACA+B,cADH,CACkBD,IADlB,EAEGE,IAFH,CAESC,OAAD,IAAa;MACjBZ,cAAc,CAACY,OAAD,CAAd;MACAN,cAAc;IACf,CALH,EAMGO,KANH,CAMUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CARH;EASD;;EAED,SAASG,kBAAT,CAA4BR,IAA5B,EAAkC;IAChC9B,GAAG,CACAuC,aADH,CACiBT,IADjB,EAEGE,IAFH,CAESC,OAAD,IAAa;MACjBZ,cAAc,CAACY,OAAD,CAAd;MACAN,cAAc;IACf,CALH,EAMGO,KANH,CAMUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CARH;EASD;;EAED,SAASK,cAAT,CAAwBC,IAAxB,EAA8B;IAC5B,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAU1B,WAAW,CAAC0B,GAA7C,CAAhB;IACA9C,GAAG,CACA+C,oBADH,CACwBN,IAAI,CAACK,GAD7B,EACkCJ,OADlC,EAEGV,IAFH,CAESgB,OAAD,IAAa;MACjB,MAAMC,QAAQ,GAAG3B,KAAK,CAAC4B,GAAN,CAAWC,CAAD,IAAQA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAjD,CAAjB;MACA5B,QAAQ,CAAC0B,QAAD,CAAR;IACD,CALH,EAMGf,KANH,CAMUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CARH;EASD;;EAED,SAASiB,gBAAT,CAA0BX,IAA1B,EAAgC;IAC9BzC,GAAG,CACAqD,UADH,CACcZ,IAAI,CAACK,GADnB,EAEGd,IAFH,CAEQ,MAAM;MACV,MAAMiB,QAAQ,GAAG3B,KAAK,CAACgC,MAAN,CAAcH,CAAD,IAAQA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBK,CAArB,GAAyB,IAA9C,CAAjB;MACA5B,QAAQ,CAAC0B,QAAD,CAAR;IACD,CALH,EAMGf,KANH,CAMUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CARH;EASD;;EAED,SAASoB,oBAAT,CAA8BzB,IAA9B,EAAoC;IAClC9B,GAAG,CACAwD,WADH,CACe1B,IADf,EAEGE,IAFH,CAESgB,OAAD,IAAa;MACjBzB,QAAQ,CAAC,CAACyB,OAAD,EAAU,GAAG1B,KAAb,CAAD,CAAR;MACAK,cAAc;IACf,CALH,EAMGO,KANH,CAMUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CARH;EASD;;EAED,MAAMsB,gBAAgB,GAAG,MAAM;IAC7B/B,QAAQ,CAAC,SAAD,CAAR;EACD,CAFD;;EAIA,MAAMgC,gBAAgB,GAAG,MAAM;IAC7BhC,QAAQ,CAAC,GAAD,CAAR;EACD,CAFD;;EAIA,MAAMiC,gBAAgB,GAAG,MAAM;IAC7B,IAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;MAC/B,MAAMC,GAAG,GAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ,CAD+B,CAE/B;;MACAnD,IAAI,CAACqD,UAAL,CAAgBD,GAAhB,EAAqB9B,IAArB,CAA2BgC,GAAD,IAAS;QACjC,IAAIA,GAAJ,EAAS;UACP;UACA5B,OAAO,CAACC,GAAR,CAAY,UAAZ;UACAZ,WAAW,CAAC,IAAD,CAAX;QACD;MACF,CAND;IAOD;EACF,CAZD;;EAcA/B,KAAK,CAACuE,SAAN,CAAgB,MAAM;IACpBN,gBAAgB;EACjB,CAFD,EAEG,EAFH;EAIAjE,KAAK,CAACuE,SAAN,CAAgB,MAAM;IACpBC,OAAO,CAACC,GAAR,CAAY,CAACnE,GAAG,CAACoE,eAAJ,EAAD,CAAZ,EACGpC,IADH,CACQ,QAAa;MAAA,IAAZ,CAACV,KAAD,CAAY;MACjBC,QAAQ,CAACD,KAAD,CAAR;IACD,CAHH,EAIGY,KAJH,CAIUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CANH;EAOD,CARD,EAQG,EARH;EAUAzC,KAAK,CAACuE,SAAN,CAAgB,MAAM;IACpBC,OAAO,CAACC,GAAR,CAAY,CAACnE,GAAG,CAACqE,cAAJ,EAAD,CAAZ,EACGrC,IADH,CACQ,SAAe;MAAA,IAAd,CAACC,OAAD,CAAc;MACnBZ,cAAc,CAACY,OAAD,CAAd;IACD,CAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAa,WAAUF,GAAI,EAA3B;IACD,CANH;EAOD,CARD,EAQG,EARH;EAUA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE,QAAC,kBAAD,CAAoB,QAApB;MAA6B,KAAK,EAAEf,WAApC;MAAA,wBACE;QAAA,UAAMI,QAAQ,KAAK,IAAb,GAAoB,mBAApB,GAA0C;MAAhD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UACE,IAAI,EAAC,QADP;UAEE,OAAO;UAAA;UACL;UACE,QAAC,IAAD;YACE,YAAY,EAAE,MAAMP,wBAAwB,CAAC,IAAD,CAD9C;YAEE,aAAa,EAAE,MAAMJ,yBAAyB,CAAC,IAAD,CAFhD;YAGE,UAAU,EAAE,MAAME,sBAAsB,CAAC,IAAD,CAH1C;YAIE,WAAW,EAAGG,YAAD,IAAkBU,eAAe,CAACV,YAAD,CAJhD;YAKE,UAAU,EAAEsB,cALd;YAME,YAAY,EAAEY,gBANhB;YAOE,KAAK,EAAE9B;UAPT;YAAA;YAAA;YAAA;UAAA,QAFG,CAWL;;QAbJ;UAAA;UAAA;UAAA;QAAA,QADF,eAiBE,QAAC,KAAD;UACE,IAAI,EAAC,SADP;UAEE,OAAO,eAAE,QAAC,QAAD;YAAU,YAAY,EAAE,MAAMmC,gBAAgB;UAA9C;YAAA;YAAA;YAAA;UAAA;QAFX;UAAA;UAAA;UAAA;QAAA,QAjBF,eAqBE,QAAC,KAAD;UACE,IAAI,EAAC,SADP;UAEE,OAAO,eAAE,QAAC,KAAD;YAAO,cAAc,EAAE,MAAMC,gBAAgB;UAA7C;YAAA;YAAA;YAAA;UAAA;QAFX;UAAA;UAAA;UAAA;QAAA,QArBF,eAyBE,QAAC,KAAD;UACE,IAAI,EAAC,GADP;UAEE,OAAO,EAAElC,QAAQ,gBAAG,QAAC,QAAD;YAAU,EAAE,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QAAH,gBAA8B,QAAC,QAAD;YAAU,EAAE,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA;QAFjD;UAAA;UAAA;UAAA;QAAA,QAzBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAkCE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAlCF,eAmCE,QAAC,WAAD;QAAA;QAAA;QAAA;MAAA,QAnCF,eAoCE,QAAC,gBAAD;QACE,MAAM,EAAEZ,sBADV;QAEE,OAAO,EAAEe,cAFX;QAGE,YAAY,EAAEE;MAHhB;QAAA;QAAA;QAAA;MAAA,QApCF,eA0CE,QAAC,aAAD;QACE,MAAM,EAAEf,mBADV;QAEE,OAAO,EAAEa,cAFX;QAGE,UAAU,EAAE4B;MAHd;QAAA;QAAA;QAAA;MAAA,QA1CF,eAgDE,QAAC,eAAD;QACE,MAAM,EAAEvC,qBADV;QAEE,OAAO,EAAEW,cAFX;QAGE,cAAc,EAAEW;MAHlB;QAAA;QAAA;QAAA;MAAA,QAhDF,eA6DE,QAAC,UAAD;QAAY,IAAI,EAAEpB,YAAlB;QAAgC,OAAO,EAAE,MAAMS,cAAc,CAAC,IAAD;MAA7D;QAAA;QAAA;QAAA;MAAA,QA7DF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAmED;;GAnMQhB,G;UAQUd,W;;;KARVc,G;AAqMT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}