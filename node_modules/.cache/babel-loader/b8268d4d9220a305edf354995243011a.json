{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    // тут проверка ответа\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setCards(data) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  getProfileData() {\n    return fetch(`${this._baseUrl}users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  setProfileData(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this.putLike(cardId) : this.deleteLike(cardId);\n  } // другие методы работы с API\n\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-49/\",\n  headers: {\n    authorization: \"3bd429b0-18aa-4fd8-8b35-785c3cf83e41\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","setCards","data","method","body","JSON","stringify","name","link","getProfileData","setProfileData","about","deleteCard","cardId","changeAvatar","avatar","putLike","deleteLike","changeLikeCardStatus","isLiked","api","authorization"],"sources":["/Users/aleksandrapetuhova/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    // тут проверка ответа\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, { headers: this._headers }).then(\n      this._checkResponse\n    );\n  }\n\n  setCards(data) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  getProfileData() {\n    return fetch(`${this._baseUrl}users/me`, { headers: this._headers }).then(\n      this._checkResponse\n    );\n  }\n\n  setProfileData(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this.putLike(cardId) : this.deleteLike(cardId)\n  }\n\n  // другие методы работы с API\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-49/\",\n  headers: {\n    authorization: \"3bd429b0-18aa-4fd8-8b35-785c3cf83e41\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}