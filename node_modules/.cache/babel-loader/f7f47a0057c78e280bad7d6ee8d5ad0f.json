{"ast":null,"code":"import _classCallCheck from\"/Users/aleksandrapetuhova/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/aleksandrapetuhova/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){// тут проверка ответа\nif(res.ok){return res.json();}else{return Promise.reject(res.status);}}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"setNewCards\",value:function setNewCards(data){return fetch(\"\".concat(this._baseUrl,\"cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"getProfileData\",value:function getProfileData(){return fetch(\"\".concat(this._baseUrl,\"users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"setProfileData\",value:function setProfileData(data){return fetch(\"\".concat(this._baseUrl,\"users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkResponse);}},{key:\"setUserAvatar\",value:function setUserAvatar(data){return fetch(\"\".concat(this._baseUrl,\"users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._baseUrl,\"cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"changeAvatar\",value:function changeAvatar(data){return fetch(\"\".concat(this._baseUrl,\"users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.link})}).then(this._checkResponse);}},{key:\"putLike\",value:function putLike(cardId){return fetch(\"\".concat(this._baseUrl,\"cards/likes/\").concat(cardId),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._baseUrl,\"cards/likes/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){return isLiked?this.deleteLike(cardId):this.putLike(cardId);}// другие методы работы с API\n}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-49/\",headers:{authorization:\"3bd429b0-18aa-4fd8-8b35-785c3cf83e41\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","data","method","body","JSON","stringify","name","link","about","avatar","cardId","isLiked","deleteLike","putLike","api","authorization"],"sources":["/Users/aleksandrapetuhova/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    // тут проверка ответа\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, { headers: this._headers }).then(\n      this._checkResponse\n    );\n  }\n\n  setNewCards(data) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  getProfileData() {\n    return fetch(`${this._baseUrl}users/me`, { headers: this._headers }).then(\n      this._checkResponse\n    );\n  }\n\n  setProfileData(data) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this.deleteLike(cardId) : this.putLike(cardId)\n  }\n\n  // другие методы работы с API\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-49/\",\n  headers: {\n    authorization: \"3bd429b0-18aa-4fd8-8b35-785c3cf83e41\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}